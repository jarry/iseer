/*
 * Copyright (c) 2011, All Rights Reserved.
 */

package com.baidu.webos.dao.impl.app;

import java.util.List;

import org.hibernate.Query;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;

import com.baidu.webos.basic.dao.impl.GenericDaoImpl;
import com.baidu.webos.dao.app.AppSearchDao;
import com.baidu.webos.entity.app.App;

/**
 * ClassName: AppSearchDaoImpl
 * Description: appSearch dao层
 * 
 * @author   <a href="mailto:lichunpin@baidu.com">LiChunping</a>
 * @version  
 * @since    TODO
 * @Date     2011-9-27 下午02:02:17
 *
 * @see      
 */
@Repository
@Transactional(propagation = Propagation.SUPPORTS, readOnly = true)
public class AppSearchDaoImpl extends GenericDaoImpl<App, Integer> implements AppSearchDao {
    
    public AppSearchDaoImpl() {
        super();
        this.entityClass = App.class;
    }

    /**
     * getResultList:
     * 根据查询关键词模糊查询匹配的name与description
     * @param q 关键词
     * @return app对象列表
     * @author lichunping    
     * @since 1.0.0
     */
    @SuppressWarnings("unchecked")
    @Override
    public List<App> getResultList(String q) {
        String hql = "FROM App a WHERE a.name LIKE ? OR a.description LIKE ?";
        return super.find(hql, "%" + q + "%", "%" + q + "%");
    }
    
    /**
     * getResultList:
     * 根据查询关键词列表模糊查询匹配的name与description
     * @param queryList 关键词
     * @return 对象列表
     * @author lichunping  
     * @since 1.0.0
     */
    @SuppressWarnings("unchecked")
    public List<App> getResultList(Object... queryList) {
        if (queryList != null) {
            
            String hql = "FROM App a WHERE a.name LIKE :q OR a.description LIKE :q";
            Query query = super.createQuery(hql);

            // 目前这种方式有问题，还得采用Criterion来多次查询
            // TODO 支持多关键词查询，比如空格或逗号间隔时  
            for (Object q : queryList) {
                query.setParameter("q", "%" + q + "%");
            }
            return query.list();            
        }
        return null;        
    }
    

}
